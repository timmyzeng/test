<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>青匆</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-01-27T10:57:50.736Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>timmy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>1+2+……+n的特殊求法</title>
    <link href="http://yoursite.com/2018/01/27/1-%E2%80%A6%E2%80%A6-n%E7%9A%84%E7%89%B9%E6%AE%8A%E6%B1%82%E6%B3%95/"/>
    <id>http://yoursite.com/2018/01/27/1-……-n的特殊求法/</id>
    <published>2018-01-26T16:44:40.000Z</published>
    <updated>2018-01-27T10:57:50.736Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h4><p><strong>求1+2+3+…+n，要求不能使用乘除法，for,while，if,else,switch,case等关键字以及条件判断语句。</strong></p><p>自己思考想到了一种方法，递归的思路，但是判断终止的条件不是if，利用了&amp;&amp;的性质，当前操作数为假的时候，不再进行后操作数的运算。然后在网上查阅，得到了其他的做法。</p><h5 id="利用-amp-amp-操作符，-也一样的做法。"><a href="#利用-amp-amp-操作符，-也一样的做法。" class="headerlink" title="利用&amp;&amp;操作符，|| 也一样的做法。"></a>利用&amp;&amp;操作符，|| 也一样的做法。</h5><p>思路：当result = 0 的时候，&amp;&amp;不再判断右操作数，递归停止<br><a id="more"></a></p><pre><code>int sum( int n ){    int result = n;    result &amp;&amp; (result += sum(n-1));    return result;}int main(){    cout &lt;&lt; sum(100) &lt;&lt; endl;    return 0;}</code></pre><h5 id="利用构造函数以及静态成员变量"><a href="#利用构造函数以及静态成员变量" class="headerlink" title="利用构造函数以及静态成员变量"></a>利用构造函数以及静态成员变量</h5><p>思路：构造N次对象，每次对静态变量sum++，对n赋值。利用静态变量对所有同类对象有效的特点。</p><pre><code>class tmp{public:    //构造    tmp( ){        ++n;        sum += n;    }    //初始化    void static init(){        n = 0;        sum = 0;    }    //获得sum    int static getsum(){        return sum;    }private:    static int n;    static int sum;};int tmp::n = 0;int tmp::sum = 0;//运行的函数int count(int n){    tmp::init();    tmp* a = new tmp[n];    delete[] a;    a = NULL;    tmp::getsum();}int main(){    cout &lt;&lt; count(100) &lt;&lt; endl;    return 0;}</code></pre><h5 id="利用虚函数、继承和函数指针"><a href="#利用虚函数、继承和函数指针" class="headerlink" title="利用虚函数、继承和函数指针"></a>利用虚函数、继承和函数指针</h5><p>思路：</p><ol><li>定义两个类，A是基类，B是子类。</li><li>定义一个<code>A* Array[2]</code>,其中Array[0]存放A对象的地址，Array[1]存放B对象的地址。</li><li>调用函数Sum中调用Sum的递归。同时对变量n两次取反<code>Array[!!n]-&gt;Sum(n-1)+n</code>,这样当n不为0的时候，得到bool值1。<code>Array[!!n] = Array[1]</code></li><li><p>当n=0调用基类A的sum。充分利用虚函数参数与类型有关的性质。</p><p> //1、虚函数<br> #include <iostream><br> using namespace std;<br> class A;<br> A* Array[2];<br> class A<br> {<br> public:</iostream></p><pre><code>virtual int Sum(int n){    return 0;}</code></pre><p> };</p><p> class B:public A{<br> public:</p><pre><code>virtual int Sum(int n){    //当 n != 0，!!n = 1    return Array[!!n]-&gt;Sum(n-1)+n;}</code></pre><p> };</p><p> int Sum2(int n){</p><pre><code>A a;B b;Array[0]=&amp;a;Array[1]=&amp;b;//调用虚函数int value=Array[1]-&gt;Sum(n);return value;</code></pre><p> }</p><p> int main(){</p><pre><code>cout&lt;&lt; Sum2(100) &lt;&lt;endl;return 0;</code></pre><p> }</p><p> //2、同上，这里利用的是函数指针来实现。<br> typedef int (*fun)(int);</p><p> int solution3_f1(int i){</p><pre><code>return 0;</code></pre><p> }</p><p> int solution3_f2(int i){</p><pre><code>fun f[2]={solution3_f1, solution3_f2};return i+f[!!i](i-1);</code></pre><p> }</p></li></ol><h5 id="利用异常处理的机制"><a href="#利用异常处理的机制" class="headerlink" title="利用异常处理的机制"></a>利用异常处理的机制</h5><p>思路：try接收到的异常会在catch中捕获。</p><pre><code>public int sum(int n){    try{        //n = 2 的时候，出现异常，程序流跳转到catch        int[] array = new int[n-2];        return n+sum(n-1);    }    catch(Exception e){        //返回1到上一个递归处，n = 2处。        return 1;    }}</code></pre><h5 id="利用模板"><a href="#利用模板" class="headerlink" title="利用模板"></a>利用模板</h5><p>思路：利用了模板的特化作为递归结束的条件，并借用枚举类型。</p><pre><code>#include &lt;iostream&gt;using namespace std;template &lt;unsigned N&gt;class Sum{    public:        enum{            sum = N+Sum&lt;N-1&gt;::sum        };};//模板特化，当N=1 的时候，调用template&lt;&gt;class Sum&lt;1&gt;{    public:        enum{            sum = 1        };};int main(){    cout &lt;&lt; Sum&lt;100&gt;::sum &lt;&lt; endl;    return 0;}</code></pre><h5 id="方法来源地址"><a href="#方法来源地址" class="headerlink" title="方法来源地址"></a><a href="http://blog.csdn.net/u010993983/article/details/37730317" target="_blank" rel="noopener">方法来源地址</a></h5>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerlink&quot; title=&quot;题目：&quot;&gt;&lt;/a&gt;题目：&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;求1+2+3+…+n，要求不能使用乘除法，for,while，if,else,switch,case等关键字以及条件判断语句。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;自己思考想到了一种方法，递归的思路，但是判断终止的条件不是if，利用了&amp;amp;&amp;amp;的性质，当前操作数为假的时候，不再进行后操作数的运算。然后在网上查阅，得到了其他的做法。&lt;/p&gt;
&lt;h5 id=&quot;利用-amp-amp-操作符，-也一样的做法。&quot;&gt;&lt;a href=&quot;#利用-amp-amp-操作符，-也一样的做法。&quot; class=&quot;headerlink&quot; title=&quot;利用&amp;amp;&amp;amp;操作符，|| 也一样的做法。&quot;&gt;&lt;/a&gt;利用&amp;amp;&amp;amp;操作符，|| 也一样的做法。&lt;/h5&gt;&lt;p&gt;思路：当result = 0 的时候，&amp;amp;&amp;amp;不再判断右操作数，递归停止&lt;br&gt;
    
    </summary>
    
      <category term="C++" scheme="http://yoursite.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>收集</title>
    <link href="http://yoursite.com/2018/01/25/Linux%E7%9B%B8%E5%85%B3%E7%BD%91%E7%AB%99/"/>
    <id>http://yoursite.com/2018/01/25/Linux相关网站/</id>
    <published>2018-01-25T10:18:01.000Z</published>
    <updated>2018-01-27T10:57:52.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、Linux"><a href="#1、Linux" class="headerlink" title="1、Linux"></a><strong>1、Linux</strong></h3><h4 id="命令相关"><a href="#命令相关" class="headerlink" title="命令相关"></a>命令相关</h4><p>1、Linux命令大全：<a href="http://man.linuxde.net/" target="_blank" rel="noopener">http://man.linuxde.net/</a></p><p>2、修改时间查看时间：<a href="https://www.cnblogs.com/jiu0821/p/5999566.html" target="_blank" rel="noopener">https://www.cnblogs.com/jiu0821/p/5999566.html</a><br><a id="more"></a><br>3、移动、重命名文件/目录：<a href="https://linux.cn/article-2688-1.html" target="_blank" rel="noopener">https://linux.cn/article-2688-1.html</a></p><p>4、查看系统版本：<a href="http://www.linuxidc.com/Linux/2015-07/119897.htm" target="_blank" rel="noopener">http://www.linuxidc.com/Linux/2015-07/119897.htm</a></p><h4 id="vim相关"><a href="#vim相关" class="headerlink" title="vim相关"></a>vim相关</h4><p>1、vim的配置：<a href="http://blog.csdn.net/footmart_c/article/details/51588524" target="_blank" rel="noopener">http://blog.csdn.net/footmart_c/article/details/51588524</a></p><p>2、多行删除复制：<a href="https://www.cnblogs.com/MMLoveMeMM/articles/3707287.html" target="_blank" rel="noopener">https://www.cnblogs.com/MMLoveMeMM/articles/3707287.html</a></p><p>3、vim安装报错EXTERN.h：<a href="http://tieba.baidu.com/p/4471948063" target="_blank" rel="noopener">http://tieba.baidu.com/p/4471948063</a></p><p>4、vim升级8.0+YouCompleteMe补全插件：<a href="http://blog.csdn.net/nzyalj/article/details/75331822" target="_blank" rel="noopener">http://blog.csdn.net/nzyalj/article/details/75331822</a></p><p>5、vim8.0升级后添加到路径中：<a href="http://blog.csdn.net/u013388603/article/details/72780586" target="_blank" rel="noopener">http://blog.csdn.net/u013388603/article/details/72780586</a></p><p>6、YouCompleteMe：<a href="http://blog.51cto.com/990487026/1905427" target="_blank" rel="noopener">http://blog.51cto.com/990487026/1905427</a></p><h4 id="git相关"><a href="#git相关" class="headerlink" title="git相关"></a>git相关</h4><p>1、git安装：<a href="https://jingyan.baidu.com/article/e9fb46e16698687521f766ec.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/e9fb46e16698687521f766ec.html</a></p><p>2、git安装：<a href="http://blog.csdn.net/u013256816/article/details/54743470" target="_blank" rel="noopener">http://blog.csdn.net/u013256816/article/details/54743470</a></p><p>3、git升级2.7.3：<a href="https://www.cnblogs.com/yexinw/p/6401663.html" target="_blank" rel="noopener">https://www.cnblogs.com/yexinw/p/6401663.html</a></p><h4 id="python相关"><a href="#python相关" class="headerlink" title="python相关"></a>python相关</h4><p>1、2.6升级2.7：<a href="https://www.cnblogs.com/yaoyuanmengjing/p/7853228.html" target="_blank" rel="noopener">https://www.cnblogs.com/yaoyuanmengjing/p/7853228.html</a></p><p>2、安装3.5.2并与python2共存：<a href="https://www.ywlib.com/archives/96-1.html" target="_blank" rel="noopener">https://www.ywlib.com/archives/96-1.html</a></p><h4 id="输入相关"><a href="#输入相关" class="headerlink" title="输入相关"></a>输入相关</h4><p>1、python造成 input method preferences无效：<a href="http://blog.csdn.net/jaket5219999/article/details/52912321" target="_blank" rel="noopener">http://blog.csdn.net/jaket5219999/article/details/52912321</a></p><p>2、安装Fcitx 4.0.0：<a href="https://www.douban.com/note/319236531/" target="_blank" rel="noopener">https://www.douban.com/note/319236531/</a></p><p>3、设置Fcitx默认：<a href="https://jingyan.baidu.com/article/0320e2c1393a3e1b86507b51.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/0320e2c1393a3e1b86507b51.html</a></p><p>4、ibus开启：<a href="http://blog.csdn.net/zitong_ccnu/article/details/40110583" target="_blank" rel="noopener">http://blog.csdn.net/zitong_ccnu/article/details/40110583</a></p><h4 id="源相关"><a href="#源相关" class="headerlink" title="源相关"></a>源相关</h4><p>1、Nux Dextop源：<a href="http://www.linuxidc.com/Linux/2016-06/132101.htm" target="_blank" rel="noopener">http://www.linuxidc.com/Linux/2016-06/132101.htm</a></p><p>2、yum源解析（详细）：<a href="https://www.cnblogs.com/mchina/archive/2013/01/04/2842275.html" target="_blank" rel="noopener">https://www.cnblogs.com/mchina/archive/2013/01/04/2842275.html</a></p><h4 id="Hexo相关"><a href="#Hexo相关" class="headerlink" title="Hexo相关"></a>Hexo相关</h4><p>gcc升级：<a href="http://www.cnblogs.com/lpbottle/p/install_gcc.html" target="_blank" rel="noopener">http://www.cnblogs.com/lpbottle/p/install_gcc.html</a></p><p>gcc升级：<a href="http://blog.csdn.net/furzoom/article/details/53322510" target="_blank" rel="noopener">http://blog.csdn.net/furzoom/article/details/53322510</a></p><p>gcc升级：<a href="http://blog.csdn.net/zr1076311296/article/details/51334538" target="_blank" rel="noopener">http://blog.csdn.net/zr1076311296/article/details/51334538</a></p><p>Nodejs安装：<a href="https://www.cnblogs.com/lpbottle/p/7733397.html" target="_blank" rel="noopener">https://www.cnblogs.com/lpbottle/p/7733397.html</a></p><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4><p>1、/mnt/hgfs没有共享文件夹：<a href="http://www.mamicode.com/info-detail-1655589.html" target="_blank" rel="noopener">http://www.mamicode.com/info-detail-1655589.html</a></p><p>2、Linux就该这么学：<a href="http://www.linuxprobe.com/chapter-00.html" target="_blank" rel="noopener">http://www.linuxprobe.com/chapter-00.html</a></p><h3 id="2、C语言"><a href="#2、C语言" class="headerlink" title="2、C语言"></a><strong>2、C语言</strong></h3><p>1、链表相关笔试题：<a href="http://www.cnblogs.com/qingjiaowoxiaoxioashou/p/6416649.html" target="_blank" rel="noopener">http://www.cnblogs.com/qingjiaowoxiaoxioashou/p/6416649.html</a></p><h3 id="3、GitHub"><a href="#3、GitHub" class="headerlink" title="3、GitHub"></a><strong>3、GitHub</strong></h3><p>1、知乎：<a href="https://www.zhihu.com/question/20070065" target="_blank" rel="noopener">https://www.zhihu.com/question/20070065</a></p><p>2、他的网站里有：<a href="http://youngxhui.github.io/" target="_blank" rel="noopener">http://youngxhui.github.io/</a></p><p>以下，搭建自己的github博客：</p><p>1）配置详细：<a href="https://www.jianshu.com/p/b7886271e21a" target="_blank" rel="noopener">https://www.jianshu.com/p/b7886271e21a</a></p><p>2）很强大的一个：<a href="http://kchen.cc/2016/11/12/hexo-instructions/" target="_blank" rel="noopener">http://kchen.cc/2016/11/12/hexo-instructions/</a></p><p>3）WordPress和Hexo以及md编辑器：<a href="https://www.imooc.com/article/12257" target="_blank" rel="noopener">https://www.imooc.com/article/12257</a></p><p>4）localhost:4000出问题：<a href="http://blog.csdn.net/u012246342/article/details/51543370" target="_blank" rel="noopener">http://blog.csdn.net/u012246342/article/details/51543370</a></p><p>5）Hexo问题总结：<a href="http://blog.csdn.net/wx_962464/article/details/44786929" target="_blank" rel="noopener">http://blog.csdn.net/wx_962464/article/details/44786929</a></p><h3 id="4、blog"><a href="#4、blog" class="headerlink" title="4、blog"></a><strong>4、blog</strong></h3><p>1、<a href="http://www.zipperary.com/" target="_blank" rel="noopener">http://www.zipperary.com/</a></p><p>2、陈皓：<a href="https://coolshell.cn/featured" target="_blank" rel="noopener">https://coolshell.cn/featured</a></p><h3 id="5、其它"><a href="#5、其它" class="headerlink" title="5、其它"></a><strong>5、其它</strong></h3><p>1、msdn：<a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">https://msdn.itellyou.cn/</a></p><p>2、NTFS和FAT32区别：<a href="http://www.ntfsformac.cn/qita-nytqubie.html" target="_blank" rel="noopener">http://www.ntfsformac.cn/qita-nytqubie.html</a></p><p>3、SQL源码剖析：<a href="http://deepfuture.iteye.com/blog/718478" target="_blank" rel="noopener">http://deepfuture.iteye.com/blog/718478</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、Linux&quot;&gt;&lt;a href=&quot;#1、Linux&quot; class=&quot;headerlink&quot; title=&quot;1、Linux&quot;&gt;&lt;/a&gt;&lt;strong&gt;1、Linux&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&quot;命令相关&quot;&gt;&lt;a href=&quot;#命令相关&quot; class=&quot;headerlink&quot; title=&quot;命令相关&quot;&gt;&lt;/a&gt;命令相关&lt;/h4&gt;&lt;p&gt;1、Linux命令大全：&lt;a href=&quot;http://man.linuxde.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://man.linuxde.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2、修改时间查看时间：&lt;a href=&quot;https://www.cnblogs.com/jiu0821/p/5999566.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/jiu0821/p/5999566.html&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="网站收集" scheme="http://yoursite.com/categories/%E7%BD%91%E7%AB%99%E6%94%B6%E9%9B%86/"/>
    
    
  </entry>
  
</feed>

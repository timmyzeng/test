<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[1+2+……+n的特殊求法]]></title>
    <url>%2F2018%2F01%2F27%2F1-%E2%80%A6%E2%80%A6-n%E7%9A%84%E7%89%B9%E6%AE%8A%E6%B1%82%E6%B3%95%2F</url>
    <content type="text"><![CDATA[题目：求1+2+3+…+n，要求不能使用乘除法，for,while，if,else,switch,case等关键字以及条件判断语句。 自己思考想到了一种方法，递归的思路，但是判断终止的条件不是if，利用了&amp;&amp;的性质，当前操作数为假的时候，不再进行后操作数的运算。然后在网上查阅，得到了其他的做法。 利用&amp;&amp;操作符，|| 也一样的做法。思路：当result = 0 的时候，&amp;&amp;不再判断右操作数，递归停止 int sum( int n ){ int result = n; result &amp;&amp; (result += sum(n-1)); return result; } int main(){ cout &lt;&lt; sum(100) &lt;&lt; endl; return 0; } 利用构造函数以及静态成员变量思路：构造N次对象，每次对静态变量sum++，对n赋值。利用静态变量对所有同类对象有效的特点。 class tmp{ public: //构造 tmp( ){ ++n; sum += n; } //初始化 void static init(){ n = 0; sum = 0; } //获得sum int static getsum(){ return sum; } private: static int n; static int sum; }; int tmp::n = 0; int tmp::sum = 0; //运行的函数 int count(int n){ tmp::init(); tmp* a = new tmp[n]; delete[] a; a = NULL; tmp::getsum(); } int main(){ cout &lt;&lt; count(100) &lt;&lt; endl; return 0; } 利用虚函数、继承和函数指针思路： 定义两个类，A是基类，B是子类。 定义一个A* Array[2],其中Array[0]存放A对象的地址，Array[1]存放B对象的地址。 调用函数Sum中调用Sum的递归。同时对变量n两次取反Array[!!n]-&gt;Sum(n-1)+n,这样当n不为0的时候，得到bool值1。Array[!!n] = Array[1] 当n=0调用基类A的sum。充分利用虚函数参数与类型有关的性质。 //1、虚函数 #include using namespace std; class A; A* Array[2]; class A { public: virtual int Sum(int n){ return 0; } }; class B:public A{ public: virtual int Sum(int n){ //当 n != 0，!!n = 1 return Array[!!n]-&gt;Sum(n-1)+n; } }; int Sum2(int n){ A a; B b; Array[0]=&amp;a; Array[1]=&amp;b; //调用虚函数 int value=Array[1]-&gt;Sum(n); return value; } int main(){ cout&lt;&lt; Sum2(100) &lt;&lt;endl; return 0; } //2、同上，这里利用的是函数指针来实现。 typedef int (*fun)(int); int solution3_f1(int i){ return 0; } int solution3_f2(int i){ fun f[2]={solution3_f1, solution3_f2}; return i+f[!!i](i-1); } 利用异常处理的机制思路：try接收到的异常会在catch中捕获。 public int sum(int n){ try{ //n = 2 的时候，出现异常，程序流跳转到catch int[] array = new int[n-2]; return n+sum(n-1); } catch(Exception e){ //返回1到上一个递归处，n = 2处。 return 1; } } 利用模板思路：利用了模板的特化作为递归结束的条件，并借用枚举类型。 #include &lt;iostream&gt; using namespace std; template &lt;unsigned N&gt; class Sum{ public: enum{ sum = N+Sum&lt;N-1&gt;::sum }; }; //模板特化，当N=1 的时候，调用 template&lt;&gt; class Sum&lt;1&gt;{ public: enum{ sum = 1 }; }; int main(){ cout &lt;&lt; Sum&lt;100&gt;::sum &lt;&lt; endl; return 0; } 方法来源地址]]></content>
      <categories>
        <category>C++</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[收集]]></title>
    <url>%2F2018%2F01%2F25%2FLinux%E7%9B%B8%E5%85%B3%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[1、Linux命令相关1、Linux命令大全：http://man.linuxde.net/ 2、修改时间查看时间：https://www.cnblogs.com/jiu0821/p/5999566.html3、移动、重命名文件/目录：https://linux.cn/article-2688-1.html 4、查看系统版本：http://www.linuxidc.com/Linux/2015-07/119897.htm vim相关1、vim的配置：http://blog.csdn.net/footmart_c/article/details/51588524 2、多行删除复制：https://www.cnblogs.com/MMLoveMeMM/articles/3707287.html 3、vim安装报错EXTERN.h：http://tieba.baidu.com/p/4471948063 4、vim升级8.0+YouCompleteMe补全插件：http://blog.csdn.net/nzyalj/article/details/75331822 5、vim8.0升级后添加到路径中：http://blog.csdn.net/u013388603/article/details/72780586 6、YouCompleteMe：http://blog.51cto.com/990487026/1905427 git相关1、git安装：https://jingyan.baidu.com/article/e9fb46e16698687521f766ec.html 2、git安装：http://blog.csdn.net/u013256816/article/details/54743470 3、git升级2.7.3：https://www.cnblogs.com/yexinw/p/6401663.html python相关1、2.6升级2.7：https://www.cnblogs.com/yaoyuanmengjing/p/7853228.html 2、安装3.5.2并与python2共存：https://www.ywlib.com/archives/96-1.html 输入相关1、python造成 input method preferences无效：http://blog.csdn.net/jaket5219999/article/details/52912321 2、安装Fcitx 4.0.0：https://www.douban.com/note/319236531/ 3、设置Fcitx默认：https://jingyan.baidu.com/article/0320e2c1393a3e1b86507b51.html 4、ibus开启：http://blog.csdn.net/zitong_ccnu/article/details/40110583 源相关1、Nux Dextop源：http://www.linuxidc.com/Linux/2016-06/132101.htm 2、yum源解析（详细）：https://www.cnblogs.com/mchina/archive/2013/01/04/2842275.html Hexo相关gcc升级：http://www.cnblogs.com/lpbottle/p/install_gcc.html gcc升级：http://blog.csdn.net/furzoom/article/details/53322510 gcc升级：http://blog.csdn.net/zr1076311296/article/details/51334538 Nodejs安装：https://www.cnblogs.com/lpbottle/p/7733397.html 其它1、/mnt/hgfs没有共享文件夹：http://www.mamicode.com/info-detail-1655589.html 2、Linux就该这么学：http://www.linuxprobe.com/chapter-00.html 2、C语言1、链表相关笔试题：http://www.cnblogs.com/qingjiaowoxiaoxioashou/p/6416649.html 3、GitHub1、知乎：https://www.zhihu.com/question/20070065 2、他的网站里有：http://youngxhui.github.io/ 以下，搭建自己的github博客： 1）配置详细：https://www.jianshu.com/p/b7886271e21a 2）很强大的一个：http://kchen.cc/2016/11/12/hexo-instructions/ 3）WordPress和Hexo以及md编辑器：https://www.imooc.com/article/12257 4）localhost:4000出问题：http://blog.csdn.net/u012246342/article/details/51543370 5）Hexo问题总结：http://blog.csdn.net/wx_962464/article/details/44786929 4、blog1、http://www.zipperary.com/ 2、陈皓：https://coolshell.cn/featured 5、其它1、msdn：https://msdn.itellyou.cn/ 2、NTFS和FAT32区别：http://www.ntfsformac.cn/qita-nytqubie.html 3、SQL源码剖析：http://deepfuture.iteye.com/blog/718478]]></content>
      <categories>
        <category>网站收集</category>
      </categories>
  </entry>
</search>
